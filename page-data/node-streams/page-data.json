{"componentChunkName":"component---src-templates-post-jsx","path":"/node-streams","result":{"data":{"orgContent":{"metadata":{"title":"Node Streams","date":"January 13th, 2020","tags":["node","research"]},"html":"<div class=\"section\"><p>I am looking into a way to do ETL (Extract, Transform, Load) in Node. It seams to me that Streams are a very natural way to do this. However, Streams only seem to support simple pipelines of the form:</p><pre><code class=\"language-js\">    <span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> zlib <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zlib'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file.txt'</span><span class=\"token punctuation\">)</span>                <span class=\"token comment\">// read a file</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>zlib<span class=\"token punctuation\">.</span><span class=\"token function\">createGzip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">// zip it</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file.txt.gz'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// and write it</span></code></pre><p>In a diagram this would look like:</p><p><figure><img src=\"/static/pipe-51b061747be68d430662325171499092.png\"></figure></p><p>But imagine I want to zip a file and mark it if it fails an expected checksum. In a diagram, that would look like:</p><p><figure><img src=\"/static/network-dc00d89e1798b1bd51e2862e6886a12b.png\"></figure></p><p>In order to do that, I would need Stream operations like <code>split</code> and <code>join</code>, but these don't seem to exist.</p><p>Let's figure out how to do this!</p></div>"}},"pageContext":{"slug":"/node-streams","previous":{"fields":{"slug":"/setting-up-this-blog"},"metadata":{"title":"Setting up this blog","date":"January 12th, 2020","tags":["meta","tech"]}},"next":{"fields":{"slug":"/migrated-to-org"},"metadata":{"title":"Migrated to org","date":"February 2nd, 2020","tags":["org","meta"]}}}},"staticQueryHashes":["1056462243"]}