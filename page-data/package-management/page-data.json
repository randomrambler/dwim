{"componentChunkName":"component---src-templates-post-jsx","path":"/package-management","result":{"data":{"orgContent":{"metadata":{"title":"Package management","date":"January 4th, 2020","tags":["coding"]},"html":"<div class=\"section\"><p>In <i>IEEE Computer magazine</i> of March 1998 the original developer or Tcl/TK, John Ousterhout, <a href=\"http://www.tcl.tk/doc/scripting.html\">wrote</a>:</p><blockquote>Scripting languages are designed for /gluing/ applications; they use typeless approaches to achieve a higher level of programming and more rapid application development than system programming languages. Increases in computer speed and changes in the application mix are making scripting languages more and more important for applications of the future.</blockquote><p>I think that more than 20 years later we can confirm that Ousterhout was right. Programming has been transformed from writing everything yourself from scratch, to finding the right components, configuring them and combining them with some code of your own. And, although strongly typed and compiled languages like Java and C# persist, scripting languages like Javascript and Python <a href=\"https://octoverse.github.com/#top-languages\">top</a> the <a href=\"https://insights.stackoverflow.com/survey/2019#most-popular-technologies\">charts</a>.</p><p>When I learned to program (<i>oldtimer speaking</i>), there was no Internet. If I wanted to use code written by others, I bought a magazine and painstakingly copied the printed code into my trusted <a href=\"https://codeincomplete.com/posts/c64-manual-nostalgia/\">C64</a>. And when I say \"copy\", I do not mean <code>cp file.bas</code>, but <a href=\"https://en.wikipedia.org/wiki/Type-in_program\">typing</a> the code one character at a time. When I was really 'lucky' I had to type long lists of meaningless numbers representing machine code. The result would be blazing fast, but hardly ever worked, because typos were almost inevitable.</p><p><figure><img src=\"./type-in-listing.png\"></figure><a href=\"http://www.ourdigitalheritage.org/archive/playitagain/why-write-a-commodore-64-game-today/\">src</a></p><p>To me, the biggest innovation in programming of the last decade is package managers like <a href=\"https://pipenv.kennethreitz.org/\">pipenv</a> and <a href=\"https://yarnpkg.com/\">yarn</a>, which make finding, installing and maintaining packages a breeze. And to top it off, documentation has improved dramatically over the last couple of years.</p></div>"}},"pageContext":{"slug":"/package-management","previous":null,"next":{"fields":{"slug":"/setting-up-this-blog"},"metadata":{"title":"Setting up this blog","date":"January 12th, 2020","tags":["meta","tech"]}}}}}