{"componentChunkName":"component---src-templates-post-jsx","path":"/what-is-org-mode","result":{"data":{"orgContent":{"metadata":{"title":"What is Org mode","date":"February 7th, 2020","tags":["org"]},"html":"<div class=\"section\"><p>So I wrote about how to <a href=\"/10-minute-org-mode-101\">use</a> Org mode, but only briefly discussed what it <i>is</i>:</p><blockquote>Org mode is a fast and effective tool to manage personal information, like notes, tasks, and references. It is also used for authoring and publishing blogs, books and academic papers. Org mode is part of Emacs and stores its data in plain-text files.</blockquote><p>That's not a lie, but it barely scratches the surface. I was listening to <a href=\"https://emacscast.org/episode_3/\">Emacscast</a> today, and the explanation by host Rakhim inspired this post.</p><p>Basically, I see Org mode as three parts:</p><dl><dt>a markup language</dt><dd>The markup language supports structuring with nested sections and formatting like for example Markdown. Unlike Markdown, and more like XML, org mode also supports meta data, like categories, tags, and properties</dd><dt>an editor</dt><dd>Org mode is part of Emacs, so when editing org mode, you can use all functions that Emacs provides. But it adds powerful features to manage complexity, like outlining, navigating, folding and tables.</dd><dt>modules</dt><dd>Org mode provides a myriad of modules out of the box, including, but definitely not limited to:<ul><li>todos: Keep your task list with todo states, priorities, deadlines and scheduling.</li><li>agenda: Manage your tasks by sorting and filtering them in any way you can think of.</li><li>spreadsheet: Interactively calculate values in a table.</li><li>publish: Edit your content in org mode, and publish it as Markdown, HTML, PDF or EPUB out of the box, or <a href=\"https://github.com/kawabata/ox-pandoc\">any other form</a> via Pandoc.</li><li>literate programming: Execute code right in your document with Babel.</li><li>capture thoughts: With minimal disruption to your workflow.</li><li>time management: Estimate, register and report how you spend uour time.</li></ul></dd></dl><p>As the markup is just plain text, you can edit org mode files in any text editor you like. This ensures you never loose access to your data. The editor is where org mode begins to distinguish itself: editors like <a href=\"https://github.com/vscode-org-mode/vscode-org-mode\">VSCode</a>, <a href=\"https://github.com/jceb/vim-orgmode\">Vim</a> and <a href=\"https://packagecontrol.io/packages/orgmode\">Sublime</a> support only a small subset of the features you get when editing org mode in Emacs. But the modules are where org mode really starts to shine. They add such amazingly powerful features that they make org mode unlike any other tool I know.</p><p>The strength of these modules is that they are <del>integrated</del> loosely coupled. By that I mean they have maximum cohesion and minimum dependency. And by that I mean that the modules form a suite where every tool works together with the others, but the do not <i>need</i> each other. This way you can gradually add modules to get an ever richer experience and truly <a href=\"http://doc.norang.ca/org-mode.html\">Organize Your Life In Plain Text!</a></p></div>"}},"pageContext":{"slug":"/what-is-org-mode","previous":{"fields":{"slug":"/peter-principle-for-assholes"},"metadata":{"title":"Peter Principle for assholes","date":"February 6th, 2020","tags":["organisation"]}},"next":{"fields":{"slug":"/backup-your-email-its-easy"},"metadata":{"title":"Backup your email! It's easy","date":"February 10th, 2020","tags":["productivity","it"]}}}}}